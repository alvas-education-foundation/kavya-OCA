#include<stdio.h> 
4.Write a C program to construct a singly linked list by removing duplicate elements in the sorted linked list
Description:
Take a sorted list and traverse the list. Compare the current node element with next adjacent node. If it is same then delete second element, if not retain. Finally print the resulting list.
Sample output:
Given list {1,2,2,3,3,3,4}
Resulting list{1,2,3,4}


#include<stdlib.h> 
  
/* Link list node */
struct Node 
{ 
    int data; 
    struct Node* next; 
}; 
  
/* The function removes duplicates from a sorted list */
void removeDuplicates(struct Node* head) 
{ 
    /* Pointer to traverse the linked list */
    struct Node* current = head; 
  
    /* Pointer to store the next pointer of a node to be deleted*/
    struct Node* next_next;  
    
    /* do nothing if the list is empty */
    if (current == NULL)  
       return;  
  
    /* Traverse the list till last node */
    while (current->next != NULL)  
    { 
       /* Compare current node with next node */
       if (current->data == current->next->data)  
       { 
           /* The sequence of steps is important*/               
           next_next = current->next->next; 
           free(current->next); 
           current->next = next_next;   
       } 
       else /* This is tricky: only advance if no deletion */
       { 
          current = current->next;  
       } 
    } 
} 
  
/* UTILITY FUNCTIONS */
/* Function to insert a node at the beginging of the linked list */
void push(struct Node** head_ref, int new_data) 
{ 
    /* allocate node */
    struct Node* new_node = 
            (struct Node*) malloc(sizeof(struct Node)); 
              
    /* put in the data  */
    new_node->data  = new_data; 
                  
    /* link the old list off the new node */
    new_node->next = (*head_ref);      
          
    /* move the head to point to the new node */
    (*head_ref)    = new_node; 
} 
  
/* Function to print nodes in a given linked list */
void printList(struct Node *node) 
{ 
    while (node!=NULL) 
    { 
       printf("%d ", node->data); 
       node = node->next; 
    } 
}  
  
/* Driver program to test above functions*/
int main() 
{ 
    /* Start with the empty list */
    struct Node* head = NULL; 
    
    /* Let us create a sorted linked list to test the functions 
     Created linked list will be 1->2->2->3->3->4 */
    push(&head, 1); 
    push(&head, 2); 
    push(&head, 2);   
    push(&head, 3); 
    push(&head, 3); 
    push(&head, 4);                                     
  
    printf("\n Linked list before duplicate removal  "); 
    printList(head);  
  
    /* Remove duplicates from linked list */
    removeDuplicates(head);  
  
    printf("\n Linked list after duplicate removal ");          
    printList(head);             
    
    return 0; 
} 